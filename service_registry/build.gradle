buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:2.2.1.RELEASE")
		classpath "io.spring.gradle:dependency-management-plugin:1.0.2.RELEASE"
	}
}

plugins {
	id "java"
	id "idea"
	id "groovy"
	id "org.springframework.boot" version "2.2.1.RELEASE"
	id "io.spring.dependency-management" version "1.0.8.RELEASE"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
	set('springCloudVersion', "Hoxton.SR1")
}

ext.buildNumber = {
	def buildNumber = System.getenv("VERSION")
	if (buildNumber == null || buildNumber.allWhitespace) {
		buildNumber = "SNAPSHOT"
	}
	return buildNumber
}

group = 'wonderland'
project.version = (System.getenv("VERSION") ?: "3.0-SNAPSHOT")

sourceCompatibility = 11
targetCompatibility = 11

dependencies {
	implementation 'org.codehaus.groovy:groovy'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('org.glassfish.jaxb:jaxb-runtime')
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

springBoot {
	buildInfo()
}

test {
	useJUnitPlatform()
	outputs.dir snippetsDir
}

task printVersion {
	doLast {
		println project.version
	}
}

wrapper {
	gradleVersion = "6.0"
	distributionType = Wrapper.DistributionType.ALL
}

bootJar {
	archiveFileName = 'service_registry.jar'
}



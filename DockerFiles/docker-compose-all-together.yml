version: '3.7'

services:

  rabbitmq:
    build:
      context: .
      dockerfile: RabbitMQwithStompDockerfile
    ports:
      - "5672:5672"
      - "15672:15672"
      - "4369:4369"
      - "25672:25672"
      - "61613:61613"
      - "61614:61614"

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    ports:
      - target: 9094
        published: 9094
        protocol: tcp
        mode: host
    environment:
      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
      KAFKA_CREATE_TOPICS: >-
        event_log:5:3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT, OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092, OUTSIDE://localhost:9094
      KAFKA_LISTENERS: INSIDE://:9092, OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_PORT: 9092
      JMX_PORT: 9997
      #     KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka2:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092
      KAFKA_LISTENERS: INSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_PORT: 9092
      JMX_PORT: 9997
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka3:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092
      KAFKA_LISTENERS: INSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_PORT: 9092
      JMX_PORT: 9997
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka-manager:
    image: rafabsb/kafka-manager-docker:2.4
    ports:
      - "9000:9000"
    links:
      - zookeeper
      - kafka
    environment:
      ZK_HOSTS: zookeeper:2181
      APPLICATION_SECRET: letmein
      KM_ARGS: -Djava.net.preferIPv4Stack=true

#  elasticsearch:
#    hostname: elasticsearch
#    image: docker.elastic.co/elasticsearch/elasticsearch
#    environment:
#      - cluster.name=elasticsearch
#      - bootstrap.memory_lock=true
#      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
#      - discovery.type=single-node
#      - http.host=0.0.0.0
#      - transport.tcp.port=9300
#      - transport.host=0.0.0.0
#      - transport.publish_port=9300
#      - SERVICE_9300_NAME=core-elasticsearch
#      - SERVICE_9200_NAME=core-elasticsearch
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#    ports:
#      - '9300:9300'
#      - '9200:9200'
#
#  neo4j:
#    image: neo4j:3.5.11
#    hostname: neo4j
#    ports:
#      - "7474:7474"
#      - "7687:7687"
#      - "6477:6477"
#    volumes:
#      - ./neo4j/data:/data
#      - ./neo4j/logs:/logs
#      - ./neo4j/plugins:/plugins
#      - ./neo4j/import:/var/lib/neo4j/import
#    environment:
#      - NEO4J_AUTH=neo4j/test
#      - NEO4JLABS_PLUGINS=["apoc", "graph-algorithms"]
#      - NEO4J_dbms_connector_http_listen__address= :7474
#      - NEO4J_dbms_connector_https_listen__address= :6477
#      - NEO4J_dbms_connector_bolt_listen__address= :7687
#      - NEO4J_dbms_logs_debug_level=DEBUG
#      - NEO4J_apoc_import_file_enabled="true"
#      #      - NEO4J_HEAP_MEMORY=1G
#      #      - NEO4J_CACHE_MEMORY=1G
#      - NEO4J_dbms_security_procedures_whitelist= apoc.*, algo.*
#      - NEO4J_dbms_security_procedures_unrestricted= apoc.*,algo.*
#  #      NEO4J_AUTH: none

  consul:
    image: consul
    ports:
      - '8500:8500'

  config-center:
    image: bmd007/config-center:latest
    depends_on:
      - consul
    environment:
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_CLOUD_SERVICE_REGISTRY_AUTO_REGISTRATION_ENABLED: "true"
    ports:
      - "8888:8888"

  messenger:
    image: bmd007/messenger
    depends_on:
      - consul
      - config-center
      - kafka
    environment:
      SPRING_PROFILES_ACTIVE: docker-compose
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_CLOUD_CONSUL_HOST: consul
      CONFIG_SERVER_IP: http://config-center
      HELLO_WORLD_IP: http://hello-world
      CONFIG_SERVER_PORT: 8888
      SPRING_CLOUD_SERVICE_REGISTRY_AUTO_REGISTRATION_ENABLED: "true"
    ports:
      - "7461:7461"



#  hello-world:
#    image: bmd007/hello-world
#    depends_on:
#      - consul
#      - config-center
#    environment:
#      SPRING_CLOUD_CONSUL_HOST: consul
#      CONFIG_SERVER_IP: http://config-center
#      CONFIG_SERVER_PORT: 8888
#      SPRING_CLOUD_SERVICE_REGISTRY_AUTO_REGISTRATION_ENABLED: "true"
#    ports:
#      - "7451:7451"
#
#  helloyee:
#    image: bmd007/helloyee
#    depends_on:
#      - consul
#      - config-center
#      - hello-world
#    environment:
#      SPRING_CLOUD_CONSUL_HOST: consul
#      CONFIG_SERVER_IP: http://config-center
#      HELLO_WORLD_IP: http://hello-world
#      CONFIG_SERVER_PORT: 8888
#      SPRING_CLOUD_SERVICE_REGISTRY_AUTO_REGISTRATION_ENABLED: "true"
#    ports:
#      - "7461:7461"

#  message-counter1:
#    hostname: message-counter1
#    ports:
#      - 8222:9585
#      - 8223:9586
#    build:
#      context: .
#      dockerfile: Dockerfile
#    depends_on:
#      - kafka
#    environment:
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
#      KAFKA_STREAMS_SERVER_CONFIG_APP_IP: message-counter1
#      KAFKA_STREAMS_SERVER_CONFIG_APP_PORT: 9585
#
#  message_counter2:
#    hostname: message-counter2
#    ports:
#      - 8224:9585
#      - 8225:9586
#    build:
#      context: .
#      dockerfile: Dockerfile
#    depends_on:
#      - kafka
#    environment:
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
#      KAFKA_STREAMS_SERVER_CONFIG_APP_IP: message-counter2
#      KAFKA_STREAMS_SERVER_CONFIG_APP_PORT: 9585
#
#  message_counter3:
#    hostname: message-counter3
#    ports:
#      - 8226:9585
#      - 8227:9586
#    build:
#      context: .
#      dockerfile: Dockerfile
#    depends_on:
#      - kafka
#    environment:
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
#      KAFKA_STREAMS_SERVER_CONFIG_APP_IP: message-counter3
#      KAFKA_STREAMS_SERVER_CONFIG_APP_PORT: 9585
